<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>Chat Room</title>
    <link
      rel="stylesheet"
      href="/styles/style.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-100 flex items-center justify-center h-screen">
    <div class="bg-white p-6 rounded-lg shadow-lg max-w-md w-full">
      <h2 class="text-2xl font-bold mb-6 text-gray-900">Chat Room</h2>
      <!-- Display list of active users -->
      <div
        id="active-users"
        class="mb-6"
      >
        <h3 class="text-lg font-bold mb-2">Active Users</h3>
        <ul>
          <% activeUsers.forEach(user => { %>
          <li
            class="cursor-pointer"
            onclick="selectUser('<%= user.id %>')"
          >
            <%= user.username %>
          </li>
          <% }) %>
        </ul>
      </div>
      <div
        id="messages"
        class="mb-6 h-48 overflow-y-auto border p-3"
      >
        <!-- Messages will be displayed here -->
      </div>
      <form id="message-form">
        <div class="mb-4">
          <label
            for="message"
            class="block text-sm font-medium text-gray-700"
            >Message</label
          >
          <textarea
            id="message"
            name="message"
            rows="4"
            class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
            required
          ></textarea>
        </div>
        <div class="flex justify-end">
          <button
            type="submit"
            class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50"
          >
            Send
          </button>
        </div>
      </form>
    </div>
    <script>
      const messagesContainer = document.getElementById('messages');
      let receiverId = null; // Variable to store the selected receiver ID

      // Function to display new message
      function displayMessage(message) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('mb-2');
        messageElement.innerHTML = `<strong>${message.senderId}:</strong> ${message.message}`;
        messagesContainer.appendChild(messageElement);
      }

      // Function to select user
      function selectUser(id) {
        receiverId = id;
        console.log('Selected user:', id);
      }

      // Submit message form
      document.getElementById('message-form').addEventListener('submit', async (e) => {
        e.preventDefault();
        const message = document.getElementById('message').value.trim();
        if (message === '' || receiverId === null) return;
        try {
          const response = await fetch(`/api/message/send/${receiverId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message }),
          });
          const data = await response.json();
          displayMessage(data.newMessage);
          document.getElementById('message').value = ''; // Clear the input field
        } catch (error) {
          console.error('Error sending message:', error);
        }
      });
    </script>
  </body>
</html>
